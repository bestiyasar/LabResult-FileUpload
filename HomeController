using Microsoft.AspNetCore.Mvc;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Hosting;
using TahlilYorumlama.Models;

namespace TahlilYorumlama.Controllers
{
    public class HomeController : Controller
    {
        private readonly IWebHostEnvironment _webHostEnvironment;

        public HomeController(IWebHostEnvironment webHostEnvironment)
        {
            _webHostEnvironment = webHostEnvironment;
        }

        public IActionResult Index()
        {
            return View(new TahlilYorumlamaViewModel());
        }

        [HttpPost]
        public async Task<IActionResult> UploadPdf(TahlilYorumlamaViewModel model)
        {
            if (model.PdfFile != null && model.PdfFile.Length > 0)
            {
                var uploadsFolder = Path.Combine(_webHostEnvironment.WebRootPath, "uploads");
                Directory.CreateDirectory(uploadsFolder); // Ensure directory exists
                var filePath = Path.Combine(uploadsFolder, model.PdfFile.FileName);

                using (var stream = new FileStream(filePath, FileMode.Create))
                {
                    await model.PdfFile.CopyToAsync(stream);
                }
                model.PdfUploadMessage = "PDF dosyası başarıyla yüklendi.";
            }
            else
            {
                model.PdfUploadMessage = "PDF dosyası seçilmedi.";
            }

            return View("Index", model);
        }

        [HttpPost]
        public async Task<IActionResult> UploadText(TahlilYorumlamaViewModel model)
        {
            if (model.TextFile != null && model.TextFile.Length > 0)
            {
                var uploadsFolder = Path.Combine(_webHostEnvironment.WebRootPath, "uploads");
                Directory.CreateDirectory(uploadsFolder); // Ensure directory exists
                var filePath = Path.Combine(uploadsFolder, model.TextFile.FileName);

                using (var stream = new FileStream(filePath, FileMode.Create))
                {
                    await model.TextFile.CopyToAsync(stream);
                }
                model.TextUploadMessage = "Text dosyası başarıyla yüklendi.";
            }
            else
            {
                model.TextUploadMessage = "Text dosyası seçilmedi.";
            }

            return View("Index", model);
        }
    }
}
